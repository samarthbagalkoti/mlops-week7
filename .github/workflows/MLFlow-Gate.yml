name: W7 Gate (MLflow Registry)

on:
  pull_request:
    branches: [ main, master ]
    paths:
      - "W7-D1-mlflow-adv/**"
      - ".github/workflows/w7-mlflow-gate.yml"
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  gate:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    concurrency:
      group: mlflow-gate-${{ github.ref }}
      cancel-in-progress: false

    defaults:
      run:
        working-directory: W7-D1-mlflow-adv

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-py312-${{ hashFiles('W7-D1-mlflow-adv/requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-py312-

      - name: Install deps
        run: |
          python -m venv .venv
          . .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Start MLflow (local, background) and wait
        shell: bash
        run: |
          set -euxo pipefail
          . .venv/bin/activate

          # Confirm mlflow is installed
          python -c "import mlflow; print('MLflow', mlflow.__version__)"

          mkdir -p artifacts

          # Start MLflow bound to localhost only
          nohup mlflow server \
            --backend-store-uri sqlite:///mlflow.db \
            --artifacts-destination file:./artifacts \
            --host 127.0.0.1 --port 8081 \
            > mlflow.log 2>&1 &

          # Wait up to ~60s for server
          for i in {1..60}; do
            if curl -fsS http://127.0.0.1:8081/ >/dev/null; then
              echo "MLflow is up"
              break
            fi
            sleep 1
          done

          # If not up, dump logs and fail
          if ! curl -fsS http://127.0.0.1:8081/ >/dev/null; then
            echo "MLflow failed to start. Recent log:" || true
            tail -n 200 mlflow.log || true
            exit 1
          fi

          # Use local MLflow for the rest of the job
          echo "MLFLOW_TRACKING_URI=http://127.0.0.1:8081" >> "$GITHUB_ENV"

      - name: Train v1 (baseline) and promote to Production
        run: |
          . .venv/bin/activate
          make train_v1
          make promote VERSION=1 STAGE=Production DRY=false

      - name: Train v2 (candidate)
        run: |
          . .venv/bin/activate
          make train_v2

      - name: Run gate on candidate (v2)
        run: |
          . .venv/bin/activate
          set -e
          make list
          make gate VERSION=2

      - name: Upload artifacts (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: w7d2-mlflow-artifacts
          path: |
            W7-D1-mlflow-adv/mlflow.log
            W7-D1-mlflow-adv/mlflow.db
            W7-D1-mlflow-adv/artifacts/**
            W7-D1-mlflow-adv/logs/**
          if-no-files-found: warn
