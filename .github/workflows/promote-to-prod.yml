name: W7 Promote to Production (Stage→Smoke→Gate)

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]

jobs:
  release:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    defaults:
      run:
        working-directory: W7-D1-mlflow-adv

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m venv .venv
          . .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Configure & verify MLflow endpoint (EC2)
        env:
          MLFLOW_TRACKING_URI: http://54.147.138.39:8081
        run: |
          set -euo pipefail
          echo "MLFLOW_TRACKING_URI=$MLFLOW_TRACKING_URI" >> "$GITHUB_ENV"

          echo "[CHECK] Reachability (UI root)"
          curl -fsS --max-time 10 "$MLFLOW_TRACKING_URI" >/dev/null

          echo "[CHECK] MLflow Python client"
          . .venv/bin/activate
          python - <<'PY'
import os
from mlflow.tracking import MlflowClient
uri = os.environ["MLFLOW_TRACKING_URI"]
c = MlflowClient(tracking_uri=uri)
# Will raise if unreachable / wrong URI
exps = c.search_experiments()
print(f"[OK] MLflow reachable. Experiments: {len(exps)}")
PY

      # Bootstrap: ensure at least one Production baseline exists (idempotent)
      - name: Ensure baseline Production exists (idempotent)
        run: |
          . .venv/bin/activate
          make train_v1 || true
          make promote VERSION=1 STAGE=Production DRY=false || true

      - name: Train new candidate (latest)
        run: |
          . .venv/bin/activate
          make train_v2 || true

      - name: Stage → Smoke → Gate → Prod
        run: |
          . .venv/bin/activate
          make promote_latest_safe

      - name: Upload registry & audit artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: w7d4-prod-release
          path: |
            logs/audit.jsonl
            mlflow.log
            # mlflow.db and artifacts/ are on the remote VM, so they won't exist on the runner
          if-no-files-found: warn
