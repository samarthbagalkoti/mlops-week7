version: "3.9"

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data:
  alertmanager_data:
  grafana_data:

services:
  prometheus:
    image: prom/prometheus:v2.54.1
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.retention.time=2d
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./alerts.yml:/etc/prometheus/alerts.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    extra_hosts:
      # Works on modern Docker for Linux; lets you use host.docker.internal if you want.
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    networks: [monitoring]

  alertmanager:
    image: prom/alertmanager:v0.27.0
    container_name: alertmanager
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager_data:/alertmanager
    ports:
      - "9093:9093"
    restart: unless-stopped
    networks: [monitoring]

  grafana:
    image: grafana/grafana:10.4.4
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      # Optional: disable signups on a lab box
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    networks: [monitoring]

  # Optional: Blackbox exporter for MLflow HTTP probes if you don't expose /metrics
  # blackbox:
  #   image: prom/blackbox-exporter:v0.25.0
  #   container_name: blackbox
  #   ports:
  #     - "9115:9115"
  #   restart: unless-stopped
  #   networks: [monitoring]

